23.12.2023
    Ich habe alles aufgesetzt und die grobe Struktur geplant.
    ich habe mit der legal moves Berechnung Angefangen welche ich alle in einem Array speichere
    ich teile diese auf angefangen mit den rooks.
    außerdem habe ich die legalen moves des bishops und der queen gemacht.
24.12.2023
    ich habe die legalen moves der knights berchnet
25.12.2023
    ich habe die legal pawn moves angefangen dafür habe ich meine custom FEN strings erweitert
26.12.2023 
    ich habe die legal pawn moves beendet
01.31.2024
    um die legalen king moves zu brechnen muss ich erst alle moves des gegners berechnen außerdem muss ich die moves rausfiltern welche den könig in check setzten.
5.01.2024
    ich habe die casteling_moves Berechnung gemacht
13.01.2024
    ich habe eine FEN String datenbank genommen und 56000 Fen strings berechen lassen. Um zu testen ob alle richtig sind habe ich auch eine python-chess libary die gleichen FEN strings gegeben
    der erste fehler an meinem code der mir auffiel war das der könig gegner schlagen könnte welche gedeckt werden.
22.01.2024
    ich habe die restlichen fehler im code gelöst und ein test mit 28 Miliionen positionen gemacht mit 0 fehlern.
18.02.2024
    ich schreibe code welcher verschiedene perft tests macht damit ich später einfach optimierungen an dem legal moves code machen kann
22.02.2024
    ich fange den minmax algorithmus an mit multithreading
08.03.2024
    ich um den minimax zu verbessseren werde ich die legal moves berechen an ein CNN weitergeben inerhalb des minmax baums da dieser schneller geht dafür mache ich ein algorithmus welcher die output indexe des CNN in uint16_t moves umwadelt un eine umkehr funktion dieser für das training dafür nehme ich an das es inklusive promotions 4272 moves gibt also 64*64 + 176 promotions.
08.04.2024
    ich strukturiere meine files und den code und packe alte sachen für erste in einen seperaten Ordner
09.04.2024
    ich mache die vorbereitungen um das Neurale netz zu trainieren also die umwandlung von Bitboards in input tensor und target tensor. 
    Da die speicherung von pytorch modellen in c++ nicht möglich ist muss ich das netzwerk in python trainieren dafür mache ich eine .csv mit den trainingsdaten 
10.04.2024
    ich habe das erste TestModel trainiert um die functionen und alles zu testen außerdem schreibe ich accuracy tests für Modelle
15.04.2024
    Nach ein paar test sieht man dass das model vergleischsweise selbst im kleinstmöglichem zustand langsamer ist als mein Code der die züge manuell berechnet deshalb kann ich 
    das Modell nicht gebrauchen und nutzte stattdessen mein code
20.04.2024
    ich habe die Evaluation function angefangen mit standart Evaluations methoden
22.05.2024
    ich habe kleinere Fehler im Quellcode gelöst und teste nun gegen ein schachbot mit einer 550 elo 
24.05.2024
    ich habe in die Evaluation Funktion das Schachmatt setzten als höste priorität gestezt wodurch die 550 elo gegner Besigt worden vor weiteren test will ich aber erst den min max 
    algorithmus optimieren